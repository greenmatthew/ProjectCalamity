<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_class_p_c_1_1_u_i_1_1_alpha_p_m_s">PC.UI.AlphaPMS</link><link linkend="_class_p_c_1_1_u_i_1_1_beta_p_m_s">PC.UI.BetaPMS</link><link linkend="_struct_p_c_1_1_u_i_1_1_button_action">PC.UI.ButtonAction</link><link linkend="_class_p_c_1_1_combat_1_1_character_combat">PC.Combat.CharacterCombat</link>
<para>Defined the combat behavior specific to the player character.  </para>
<link linkend="_class_p_c_1_1_stats_1_1_character_stats">PC.Stats.CharacterStats</link>
<para>This class is used to store general stats and damage behavior common to all game characters.  </para>
<link linkend="_class_p_c_1_1_u_i_1_1_container">PC.UI.Container</link><link linkend="_class_p_c_1_1_u_i_1_1_container_base">PC.UI.ContainerBase</link><link linkend="_class_p_c_1_1_u_i_1_1_dev_console_menu">PC.UI.DevConsoleMenu</link><link linkend="_class_p_c_1_1_combat_1_1_enemy_animation_controller">PC.Combat.EnemyAnimationController</link>
<para>Controls how the enemy animations react to information in the environment.  </para>
<link linkend="_class_p_c_1_1_combat_1_1_enemy_combat">PC.Combat.EnemyCombat</link>
<para>Defines the combat behavior specific to our enemies.  </para>
<link linkend="_class_p_c_1_1_entities_1_1_enemy_controller">PC.Entities.EnemyController</link>
<para><link linkend="_class_p_c_1_1_entities_1_1_enemy_controller">EnemyController</link> is a class that handles the enemy&apos;s AI.<?linebreak?>The enemy is programmed with a navmeshagent to follow and attack the player when the player is in a specific range.  </para>
<link linkend="_class_p_c_1_1_stats_1_1_enemy_stats">PC.Stats.EnemyStats</link>
<para>This class is used to store the enemy&apos;s stats and log its death.  </para>
<link linkend="_class_p_c_1_1_entities_1_1_gun">PC.Entities.Gun</link>
<para>Defines the general behavior of the player&apos;s gun.  </para>
<link linkend="_class_p_c_1_1_entities_1_1_gun_s_o">PC.Entities.GunSO</link>
<para>This class defines various parameters that control the gun&apos;s functionality and behavior. For instance, the gun&apos;s damage, range, and fire rate default values are defined here.  </para>
<link linkend="_class_p_c_1_1_u_i_1_1_horizontal_layout_group_handler">PC.UI.HorizontalLayoutGroupHandler</link><link linkend="_class_p_c_1_1_input_1_1_input_module">PC.Input.InputModule</link><link linkend="_class_p_c_1_1_u_i_1_1_interactable">PC.UI.Interactable</link><link linkend="_class_p_c_1_1_u_i_1_1_inventory_menu">PC.UI.InventoryMenu</link><link linkend="_class_p_c_1_1_u_i_1_1_item">PC.UI.Item</link><link linkend="_class_p_c_1_1_u_i_1_1_item_container_info">PC.UI.ItemContainerInfo</link><link linkend="_class_p_c_1_1_u_i_1_1_item_s_o">PC.UI.ItemSO</link><link linkend="_class_p_c_1_1_u_i_1_1_item_type">PC.UI.ItemType</link><link linkend="_class_p_c_1_1_u_i_1_1_item_types">PC.UI.ItemTypes</link><link linkend="_class_p_c_1_1_u_i_1_1_layout_maintain_preferred_height">PC.UI.LayoutMaintainPreferredHeight</link><link linkend="_class_p_c_1_1_u_i_1_1_map_menu">PC.UI.MapMenu</link><link linkend="_class_p_c_1_1_u_i_1_1_menu_base">PC.UI.MenuBase</link><link linkend="_class_p_c_1_1_u_i_1_1_menus_controller">PC.UI.MenusController</link><link linkend="_class_p_c_1_1_u_i_1_1_pause_menu">PC.UI.PauseMenu</link><link linkend="_class_p_c_1_1_entities_1_1_player_animator_controller">PC.Entities.PlayerAnimatorController</link>
<para>This class is responsible for controlling the player&apos;s animations. For our purposes, it simply regularly updates the variables used by the animator to determine which animation to play.  </para>
<link linkend="_class_p_c_1_1_combat_1_1_player_combat">PC.Combat.PlayerCombat</link>
<para>Defines the combat behavior specific to our player.  </para>
<link linkend="_class_p_c_1_1_entities_1_1_player_controller">PC.Entities.PlayerController</link>
<para>Defines functionality and attributes specific to our player character.  </para>
<link linkend="_class_p_c_1_1_entities_1_1_player_controller_base">PC.Entities.PlayerControllerBase</link>
<para>Defined functionality and attributes common to all player controllers such as ground checking and translating inputs to movement information.  </para>
<link linkend="_class_p_c_1_1_u_i_1_1_player_management_station_menu">PC.UI.PlayerManagementStationMenu</link><link linkend="_class_p_c_1_1_entities_1_1_player_manager">PC.Entities.PlayerManager</link>
<para>Creates a global instance of the player for easy reference by other scripts. Handles interface between player health and <link linkend="_namespace_p_c_1_1_u_i">UI</link>.  </para>
<link linkend="_class_p_c_1_1_stats_1_1_player_stats">PC.Stats.PlayerStats</link>
<para>This class is used to store the player&apos;s stats and log its death to the console.  </para>
<link linkend="_class_p_c_1_1_u_i_1_1_p_m_s_base">PC.UI.PMSBase</link><link linkend="_class_p_c_1_1_u_i_1_1_p_m_s_menu">PC.UI.PMSMenu</link><link linkend="_class_p_c_1_1_u_i_1_1_popup_window">PC.UI.PopupWindow</link><link linkend="_class_p_c_1_1_u_i_1_1_scroll_rect_no_mouse_drag">PC.UI.ScrollRectNoMouseDrag</link><link linkend="_class_p_c_1_1_u_i_1_1_slot">PC.UI.Slot</link><link linkend="_class_p_c_1_1_stats_1_1_stat">PC.Stats.Stat</link>
<para>Base class for all stats used to track character parameters.  </para>
<link linkend="_class_p_c_1_1_combat_1_1_touch_sensor">PC.Combat.TouchSensor</link>
<para>Records any contact between the player and the enemy. This allows the enemy to apply damage to the player on contact.  </para>
<link linkend="_class_p_c_1_1_u_i_1_1_vertical_layout_group_handler">PC.UI.VerticalLayoutGroupHandler</link><link linkend="_class_p_c_1_1_v_f_x_1_1_w_f_x___light_flicker">PC.VFX.WFX_LightFlicker</link>
<para>Controls the flickering of the light for the muzzle flash.  </para>
</section>
