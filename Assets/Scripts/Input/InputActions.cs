//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace PC.Input
{
    public partial class @InputActions : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""d6060810-c6ba-415c-8402-eefa5f87f16d"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""dbdb94f4-c14b-4ab4-90c6-487a4f2b9bae"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""81318f14-1232-4017-b399-40dce774a162"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""3482718b-31b6-4777-b6d4-b77c02281e98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""4b3c59f4-937d-4618-bed2-323ab44e7594"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""ab9abb51-07be-4be2-8f63-493a42a59b0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventoryMenu"",
                    ""type"": ""Button"",
                    ""id"": ""5d81c006-25a8-440b-8168-662f72030334"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenDevConsoleMenu"",
                    ""type"": ""Button"",
                    ""id"": ""ce09c07a-016e-4af2-ad28-98f3e29d1ae9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMapMenu"",
                    ""type"": ""Button"",
                    ""id"": ""bc7a715b-ae7f-4a88-8b41-b4b9a1eb5c6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""8acc7099-83b2-4e9e-885a-44766af47ab9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch(Hold)"",
                    ""type"": ""Button"",
                    ""id"": ""522f9b94-8741-4209-83e8-c23041dc78dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch(Toggle)"",
                    ""type"": ""Button"",
                    ""id"": ""7bd077a1-cc05-449a-a58a-0e1e2f4292ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Prone"",
                    ""type"": ""Button"",
                    ""id"": ""9193f79b-8d89-48b9-add9-175378f68f0f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Firemode"",
                    ""type"": ""Button"",
                    ""id"": ""e8812e56-57c4-44dd-b2de-e97ecb521e9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ADS(Hold)"",
                    ""type"": ""Button"",
                    ""id"": ""270834c6-6351-44a8-a1eb-45bf40855d60"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ADS(Toggle)"",
                    ""type"": ""Button"",
                    ""id"": ""668f951b-40eb-4150-b44c-a5484edf2ff7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""e114ac4f-2441-46c2-8f24-a535ea511cb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5d12a191-f7f2-4cee-93b7-77a35f748540"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""994251f9-d363-4dd9-be7f-537bdcdf9c22"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2da637f3-f7a8-4dc4-802f-1b2465fa6743"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9a180c01-b5c7-41a2-b74d-3b7aa4d044fa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4d11138a-9fbf-429d-b692-4b55042f7f1b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4d69f3ac-523c-4aa2-bb17-a25f8a109783"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03022126-592a-4e6c-aaf1-8533b23dfe56"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0098506-f586-4006-9a7b-7bb118634f9e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56e8eb12-31a1-49bf-bf7f-2ab479b4357e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96865297-f034-4bc6-bb21-aab141e85ba0"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventoryMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2579adce-7667-4238-941d-5cf49a18c134"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventoryMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bd34fe3-8b43-4151-b2ae-dd454b8e5706"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenDevConsoleMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d00631d-55c7-4435-9659-fce59d634a1a"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMapMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c988d7e8-e51a-4f0b-9e2e-32527833993f"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ad406b7-1b7c-4de4-a3d5-31085d6da28d"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch(Hold)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21013922-64a6-4f94-acee-2bfd7de5c82f"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch(Toggle)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""249becd4-e86a-40aa-b200-876200db103e"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Prone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e71baecf-abab-4130-a6d5-c558f6f832ae"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Firemode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83e344b0-8c60-401e-99ad-eb3771543363"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ADS(Hold)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""448d61c6-aac0-4cf9-9d2b-1571cad51784"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ADS(Toggle)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6285f8c2-741d-462c-b3ec-56adc676a5b2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""a54bcc28-1929-42c6-8df7-8b4d8738f91b"",
            ""actions"": [
                {
                    ""name"": ""CloseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""8746b97b-7ca4-4a44-a41a-986fc3e943db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""355c69de-8c5a-49eb-ab94-daca181d93a4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""InventoryMenu"",
            ""id"": ""ea8ae7ed-f370-4d7b-bbe7-463a18b67dfc"",
            ""actions"": [
                {
                    ""name"": ""CloseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""b54b3ea8-57b5-4986-8778-326b3df729bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""79f05f55-ddbd-439b-9527-f9b975422462"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""577b6c43-0a64-4e88-8c36-622a22393c43"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DevConsoleMenu"",
            ""id"": ""d1f46b76-1801-4cc4-ae2e-079b947710d9"",
            ""actions"": [
                {
                    ""name"": ""CloseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""083114cb-cb03-4440-aa60-eed2a9b63a8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""253404ca-0539-47da-a096-faadda8de373"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MapMenu"",
            ""id"": ""1e467826-a97a-47a6-a40e-a0ebaf1e567e"",
            ""actions"": [
                {
                    ""name"": ""CloseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""45e1faf6-8358-4a6d-a289-20e1b10e11a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""43d5d49a-ea43-43fa-8d29-475589e5f747"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Player
            m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
            m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
            m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
            m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
            m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
            m_Player_OpenPauseMenu = m_Player.FindAction("OpenPauseMenu", throwIfNotFound: true);
            m_Player_OpenInventoryMenu = m_Player.FindAction("OpenInventoryMenu", throwIfNotFound: true);
            m_Player_OpenDevConsoleMenu = m_Player.FindAction("OpenDevConsoleMenu", throwIfNotFound: true);
            m_Player_OpenMapMenu = m_Player.FindAction("OpenMapMenu", throwIfNotFound: true);
            m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
            m_Player_CrouchHold = m_Player.FindAction("Crouch(Hold)", throwIfNotFound: true);
            m_Player_CrouchToggle = m_Player.FindAction("Crouch(Toggle)", throwIfNotFound: true);
            m_Player_Prone = m_Player.FindAction("Prone", throwIfNotFound: true);
            m_Player_Firemode = m_Player.FindAction("Firemode", throwIfNotFound: true);
            m_Player_ADSHold = m_Player.FindAction("ADS(Hold)", throwIfNotFound: true);
            m_Player_ADSToggle = m_Player.FindAction("ADS(Toggle)", throwIfNotFound: true);
            m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
            // Menu
            m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
            m_Menu_CloseMenu = m_Menu.FindAction("CloseMenu", throwIfNotFound: true);
            // InventoryMenu
            m_InventoryMenu = asset.FindActionMap("InventoryMenu", throwIfNotFound: true);
            m_InventoryMenu_CloseMenu = m_InventoryMenu.FindAction("CloseMenu", throwIfNotFound: true);
            // DevConsoleMenu
            m_DevConsoleMenu = asset.FindActionMap("DevConsoleMenu", throwIfNotFound: true);
            m_DevConsoleMenu_CloseMenu = m_DevConsoleMenu.FindAction("CloseMenu", throwIfNotFound: true);
            // MapMenu
            m_MapMenu = asset.FindActionMap("MapMenu", throwIfNotFound: true);
            m_MapMenu_CloseMenu = m_MapMenu.FindAction("CloseMenu", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player
        private readonly InputActionMap m_Player;
        private IPlayerActions m_PlayerActionsCallbackInterface;
        private readonly InputAction m_Player_Movement;
        private readonly InputAction m_Player_Look;
        private readonly InputAction m_Player_Sprint;
        private readonly InputAction m_Player_Jump;
        private readonly InputAction m_Player_OpenPauseMenu;
        private readonly InputAction m_Player_OpenInventoryMenu;
        private readonly InputAction m_Player_OpenDevConsoleMenu;
        private readonly InputAction m_Player_OpenMapMenu;
        private readonly InputAction m_Player_Interact;
        private readonly InputAction m_Player_CrouchHold;
        private readonly InputAction m_Player_CrouchToggle;
        private readonly InputAction m_Player_Prone;
        private readonly InputAction m_Player_Firemode;
        private readonly InputAction m_Player_ADSHold;
        private readonly InputAction m_Player_ADSToggle;
        private readonly InputAction m_Player_Shoot;
        public struct PlayerActions
        {
            private @InputActions m_Wrapper;
            public PlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Movement => m_Wrapper.m_Player_Movement;
            public InputAction @Look => m_Wrapper.m_Player_Look;
            public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
            public InputAction @Jump => m_Wrapper.m_Player_Jump;
            public InputAction @OpenPauseMenu => m_Wrapper.m_Player_OpenPauseMenu;
            public InputAction @OpenInventoryMenu => m_Wrapper.m_Player_OpenInventoryMenu;
            public InputAction @OpenDevConsoleMenu => m_Wrapper.m_Player_OpenDevConsoleMenu;
            public InputAction @OpenMapMenu => m_Wrapper.m_Player_OpenMapMenu;
            public InputAction @Interact => m_Wrapper.m_Player_Interact;
            public InputAction @CrouchHold => m_Wrapper.m_Player_CrouchHold;
            public InputAction @CrouchToggle => m_Wrapper.m_Player_CrouchToggle;
            public InputAction @Prone => m_Wrapper.m_Player_Prone;
            public InputAction @Firemode => m_Wrapper.m_Player_Firemode;
            public InputAction @ADSHold => m_Wrapper.m_Player_ADSHold;
            public InputAction @ADSToggle => m_Wrapper.m_Player_ADSToggle;
            public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
            public InputActionMap Get() { return m_Wrapper.m_Player; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
            public void SetCallbacks(IPlayerActions instance)
            {
                if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
                {
                    @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                    @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                    @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                    @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                    @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                    @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                    @Sprint.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                    @Sprint.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                    @Sprint.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                    @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                    @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                    @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                    @OpenPauseMenu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenPauseMenu;
                    @OpenPauseMenu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenPauseMenu;
                    @OpenPauseMenu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenPauseMenu;
                    @OpenInventoryMenu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventoryMenu;
                    @OpenInventoryMenu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventoryMenu;
                    @OpenInventoryMenu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventoryMenu;
                    @OpenDevConsoleMenu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenDevConsoleMenu;
                    @OpenDevConsoleMenu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenDevConsoleMenu;
                    @OpenDevConsoleMenu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenDevConsoleMenu;
                    @OpenMapMenu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenMapMenu;
                    @OpenMapMenu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenMapMenu;
                    @OpenMapMenu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenMapMenu;
                    @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                    @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                    @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                    @CrouchHold.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouchHold;
                    @CrouchHold.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouchHold;
                    @CrouchHold.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouchHold;
                    @CrouchToggle.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouchToggle;
                    @CrouchToggle.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouchToggle;
                    @CrouchToggle.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouchToggle;
                    @Prone.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnProne;
                    @Prone.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnProne;
                    @Prone.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnProne;
                    @Firemode.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFiremode;
                    @Firemode.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFiremode;
                    @Firemode.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFiremode;
                    @ADSHold.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnADSHold;
                    @ADSHold.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnADSHold;
                    @ADSHold.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnADSHold;
                    @ADSToggle.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnADSToggle;
                    @ADSToggle.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnADSToggle;
                    @ADSToggle.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnADSToggle;
                    @Shoot.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                    @Shoot.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                    @Shoot.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                }
                m_Wrapper.m_PlayerActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Movement.started += instance.OnMovement;
                    @Movement.performed += instance.OnMovement;
                    @Movement.canceled += instance.OnMovement;
                    @Look.started += instance.OnLook;
                    @Look.performed += instance.OnLook;
                    @Look.canceled += instance.OnLook;
                    @Sprint.started += instance.OnSprint;
                    @Sprint.performed += instance.OnSprint;
                    @Sprint.canceled += instance.OnSprint;
                    @Jump.started += instance.OnJump;
                    @Jump.performed += instance.OnJump;
                    @Jump.canceled += instance.OnJump;
                    @OpenPauseMenu.started += instance.OnOpenPauseMenu;
                    @OpenPauseMenu.performed += instance.OnOpenPauseMenu;
                    @OpenPauseMenu.canceled += instance.OnOpenPauseMenu;
                    @OpenInventoryMenu.started += instance.OnOpenInventoryMenu;
                    @OpenInventoryMenu.performed += instance.OnOpenInventoryMenu;
                    @OpenInventoryMenu.canceled += instance.OnOpenInventoryMenu;
                    @OpenDevConsoleMenu.started += instance.OnOpenDevConsoleMenu;
                    @OpenDevConsoleMenu.performed += instance.OnOpenDevConsoleMenu;
                    @OpenDevConsoleMenu.canceled += instance.OnOpenDevConsoleMenu;
                    @OpenMapMenu.started += instance.OnOpenMapMenu;
                    @OpenMapMenu.performed += instance.OnOpenMapMenu;
                    @OpenMapMenu.canceled += instance.OnOpenMapMenu;
                    @Interact.started += instance.OnInteract;
                    @Interact.performed += instance.OnInteract;
                    @Interact.canceled += instance.OnInteract;
                    @CrouchHold.started += instance.OnCrouchHold;
                    @CrouchHold.performed += instance.OnCrouchHold;
                    @CrouchHold.canceled += instance.OnCrouchHold;
                    @CrouchToggle.started += instance.OnCrouchToggle;
                    @CrouchToggle.performed += instance.OnCrouchToggle;
                    @CrouchToggle.canceled += instance.OnCrouchToggle;
                    @Prone.started += instance.OnProne;
                    @Prone.performed += instance.OnProne;
                    @Prone.canceled += instance.OnProne;
                    @Firemode.started += instance.OnFiremode;
                    @Firemode.performed += instance.OnFiremode;
                    @Firemode.canceled += instance.OnFiremode;
                    @ADSHold.started += instance.OnADSHold;
                    @ADSHold.performed += instance.OnADSHold;
                    @ADSHold.canceled += instance.OnADSHold;
                    @ADSToggle.started += instance.OnADSToggle;
                    @ADSToggle.performed += instance.OnADSToggle;
                    @ADSToggle.canceled += instance.OnADSToggle;
                    @Shoot.started += instance.OnShoot;
                    @Shoot.performed += instance.OnShoot;
                    @Shoot.canceled += instance.OnShoot;
                }
            }
        }
        public PlayerActions @Player => new PlayerActions(this);

        // Menu
        private readonly InputActionMap m_Menu;
        private IMenuActions m_MenuActionsCallbackInterface;
        private readonly InputAction m_Menu_CloseMenu;
        public struct MenuActions
        {
            private @InputActions m_Wrapper;
            public MenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @CloseMenu => m_Wrapper.m_Menu_CloseMenu;
            public InputActionMap Get() { return m_Wrapper.m_Menu; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
            public void SetCallbacks(IMenuActions instance)
            {
                if (m_Wrapper.m_MenuActionsCallbackInterface != null)
                {
                    @CloseMenu.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnCloseMenu;
                    @CloseMenu.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnCloseMenu;
                    @CloseMenu.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnCloseMenu;
                }
                m_Wrapper.m_MenuActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @CloseMenu.started += instance.OnCloseMenu;
                    @CloseMenu.performed += instance.OnCloseMenu;
                    @CloseMenu.canceled += instance.OnCloseMenu;
                }
            }
        }
        public MenuActions @Menu => new MenuActions(this);

        // InventoryMenu
        private readonly InputActionMap m_InventoryMenu;
        private IInventoryMenuActions m_InventoryMenuActionsCallbackInterface;
        private readonly InputAction m_InventoryMenu_CloseMenu;
        public struct InventoryMenuActions
        {
            private @InputActions m_Wrapper;
            public InventoryMenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @CloseMenu => m_Wrapper.m_InventoryMenu_CloseMenu;
            public InputActionMap Get() { return m_Wrapper.m_InventoryMenu; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(InventoryMenuActions set) { return set.Get(); }
            public void SetCallbacks(IInventoryMenuActions instance)
            {
                if (m_Wrapper.m_InventoryMenuActionsCallbackInterface != null)
                {
                    @CloseMenu.started -= m_Wrapper.m_InventoryMenuActionsCallbackInterface.OnCloseMenu;
                    @CloseMenu.performed -= m_Wrapper.m_InventoryMenuActionsCallbackInterface.OnCloseMenu;
                    @CloseMenu.canceled -= m_Wrapper.m_InventoryMenuActionsCallbackInterface.OnCloseMenu;
                }
                m_Wrapper.m_InventoryMenuActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @CloseMenu.started += instance.OnCloseMenu;
                    @CloseMenu.performed += instance.OnCloseMenu;
                    @CloseMenu.canceled += instance.OnCloseMenu;
                }
            }
        }
        public InventoryMenuActions @InventoryMenu => new InventoryMenuActions(this);

        // DevConsoleMenu
        private readonly InputActionMap m_DevConsoleMenu;
        private IDevConsoleMenuActions m_DevConsoleMenuActionsCallbackInterface;
        private readonly InputAction m_DevConsoleMenu_CloseMenu;
        public struct DevConsoleMenuActions
        {
            private @InputActions m_Wrapper;
            public DevConsoleMenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @CloseMenu => m_Wrapper.m_DevConsoleMenu_CloseMenu;
            public InputActionMap Get() { return m_Wrapper.m_DevConsoleMenu; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(DevConsoleMenuActions set) { return set.Get(); }
            public void SetCallbacks(IDevConsoleMenuActions instance)
            {
                if (m_Wrapper.m_DevConsoleMenuActionsCallbackInterface != null)
                {
                    @CloseMenu.started -= m_Wrapper.m_DevConsoleMenuActionsCallbackInterface.OnCloseMenu;
                    @CloseMenu.performed -= m_Wrapper.m_DevConsoleMenuActionsCallbackInterface.OnCloseMenu;
                    @CloseMenu.canceled -= m_Wrapper.m_DevConsoleMenuActionsCallbackInterface.OnCloseMenu;
                }
                m_Wrapper.m_DevConsoleMenuActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @CloseMenu.started += instance.OnCloseMenu;
                    @CloseMenu.performed += instance.OnCloseMenu;
                    @CloseMenu.canceled += instance.OnCloseMenu;
                }
            }
        }
        public DevConsoleMenuActions @DevConsoleMenu => new DevConsoleMenuActions(this);

        // MapMenu
        private readonly InputActionMap m_MapMenu;
        private IMapMenuActions m_MapMenuActionsCallbackInterface;
        private readonly InputAction m_MapMenu_CloseMenu;
        public struct MapMenuActions
        {
            private @InputActions m_Wrapper;
            public MapMenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @CloseMenu => m_Wrapper.m_MapMenu_CloseMenu;
            public InputActionMap Get() { return m_Wrapper.m_MapMenu; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MapMenuActions set) { return set.Get(); }
            public void SetCallbacks(IMapMenuActions instance)
            {
                if (m_Wrapper.m_MapMenuActionsCallbackInterface != null)
                {
                    @CloseMenu.started -= m_Wrapper.m_MapMenuActionsCallbackInterface.OnCloseMenu;
                    @CloseMenu.performed -= m_Wrapper.m_MapMenuActionsCallbackInterface.OnCloseMenu;
                    @CloseMenu.canceled -= m_Wrapper.m_MapMenuActionsCallbackInterface.OnCloseMenu;
                }
                m_Wrapper.m_MapMenuActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @CloseMenu.started += instance.OnCloseMenu;
                    @CloseMenu.performed += instance.OnCloseMenu;
                    @CloseMenu.canceled += instance.OnCloseMenu;
                }
            }
        }
        public MapMenuActions @MapMenu => new MapMenuActions(this);
        public interface IPlayerActions
        {
            void OnMovement(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnSprint(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnOpenPauseMenu(InputAction.CallbackContext context);
            void OnOpenInventoryMenu(InputAction.CallbackContext context);
            void OnOpenDevConsoleMenu(InputAction.CallbackContext context);
            void OnOpenMapMenu(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
            void OnCrouchHold(InputAction.CallbackContext context);
            void OnCrouchToggle(InputAction.CallbackContext context);
            void OnProne(InputAction.CallbackContext context);
            void OnFiremode(InputAction.CallbackContext context);
            void OnADSHold(InputAction.CallbackContext context);
            void OnADSToggle(InputAction.CallbackContext context);
            void OnShoot(InputAction.CallbackContext context);
        }
        public interface IMenuActions
        {
            void OnCloseMenu(InputAction.CallbackContext context);
        }
        public interface IInventoryMenuActions
        {
            void OnCloseMenu(InputAction.CallbackContext context);
        }
        public interface IDevConsoleMenuActions
        {
            void OnCloseMenu(InputAction.CallbackContext context);
        }
        public interface IMapMenuActions
        {
            void OnCloseMenu(InputAction.CallbackContext context);
        }
    }
}
